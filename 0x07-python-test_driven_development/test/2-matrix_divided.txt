The ``2-matrix_divided`` module
======================

Using ``divided two matrices``
-------------------

This is an exercise where we have add two integer.  First import
``2-matrix_divided`` from the ``matrix_divided`` module:

-------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix_divided([[2]], 2)
[[1.0]]


>>> matrix_divided((1, 2), 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided(None, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided({}, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided('hellothere', 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided("", 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[6], [6, 6], [6, 6, 6]], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix_divided([[], [6, 6], [6, 6, 6]], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix_divided([[6], [6, 6]], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], (1,))
Traceback (most recent call last):
...
TypeError: div must be a number


>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], None)
Traceback (most recent call last):
...
TypeError: div must be a number


>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], [])
Traceback (most recent call last):
...
TypeError: div must be a number


>>> matrix_divided([[6, 6, 6], [6, 6, 6], [6, 6, 6]], 'hellothere')
Traceback (most recent call last):
...
TypeError: div must be a number


